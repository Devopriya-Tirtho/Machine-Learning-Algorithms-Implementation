# -*- coding: utf-8 -*-
"""PRLAB_ASSM1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qEdAyq2FytiIPptdHiQLnUp8YFUEU-9y
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

train_data = pd.read_csv('train.txt', sep=" ", header=None)
train_data.columns = ["x1", "y1", "class"]

print(train_data['x1'])

plt.plot(train_data['x1'],train_data['y1'],'bo')

b=train_data.shape
print(b[0])
RowNumber=b[0]

train_class1_x=[]
train_class1_y=[]
train_class2_x=[]
train_class2_y=[]

for i in range(0,RowNumber):
    y=train_data.at[i,'class']
    if(y==1):
      train_class1_x.append(train_data.at[i,'x1'])
      train_class1_y.append(train_data.at[i,'y1'])
    else:
      train_class2_x.append(train_data.at[i,'x1'])
      train_class2_y.append(train_data.at[i,'y1'])

plt.plot(train_class1_x,train_class1_y, 'ro', markersize=12)
plt.plot(train_class2_x,train_class2_y, 'b*', markersize=12)

test_data = pd.read_csv('test.txt', sep=" ", header=None)
test_data.columns = ["x1", "y1", "class"]
t=test_data.shape
print(t[0])
RowNumberTest=t[0]

train_mean_x_class1=np.mean(train_class1_x)
train_mean_y_class1=np.mean(train_class1_y)
train_mean_x_class2=np.mean(train_class2_x)
train_mean_y_class2=np.mean(train_class2_y)
print(train_mean_x_class1)
print(train_mean_y_class1)
print(train_mean_x_class2)
print(train_mean_y_class2)

plt.plot(train_class1_x,train_class1_y, 'ro', markersize=12)
plt.plot(train_class2_x,train_class2_y, 'b*', markersize=12)
plt.plot(train_mean_x_class1,train_mean_y_class1, 'b1', markersize=12)
plt.plot(train_mean_x_class2,train_mean_y_class2, 'rs', markersize=12)

g1=[]
g2=[]
for i in range(0,RowNumberTest):
  g1.append(train_mean_x_class1*test_data.at[i,'x1'] + train_mean_y_class1*test_data.at[i,'y1']
    - (1/2)*(train_mean_x_class1*train_mean_x_class1+train_mean_y_class1*train_mean_y_class1))
  g2.append(train_mean_x_class2*test_data.at[i,'x1'] + train_mean_y_class2*test_data.at[i,'y1']
    - (1/2)*(train_mean_x_class2*train_mean_x_class2+train_mean_y_class2*train_mean_y_class2))

print(g1)
print(g2)

result_class=[]
for i,j in zip(g1,g2):
  if (i>j):
    result_class.append(1)
    print(i)

  else:
    result_class.append(2)
    print(j)
print(result_class)
print(test_data)
test_data["result_class"] = result_class

print(test_data)

test_class1_x=[]
test_class1_y=[]
test_class2_x=[]
test_class2_y=[]

for i in range(0,RowNumberTest):
    y=test_data.at[i,'result_class']
    if(y==1):
      test_class1_x.append(test_data.at[i,'x1'])
      test_class1_y.append(test_data.at[i,'y1'])
    else:
      test_class2_x.append(test_data.at[i,'x1'])
      test_class2_y.append(test_data.at[i,'y1'])

plt.plot(train_class1_x,train_class1_y, 'ro', markersize=5)
plt.plot(train_class2_x,train_class2_y, 'b*', markersize=5)
plt.plot(train_mean_x_class1,train_mean_y_class1, 'b1', markersize=5)
plt.plot(train_mean_x_class2,train_mean_y_class2, 'rs', markersize=5)
plt.plot(test_class1_x,test_class1_y, 'rP', markersize=5)
plt.plot(test_class2_x,test_class2_y, 'bX', markersize=5)

accuracy=0
for i in range(0,RowNumberTest):
  if( test_data.at[i,'result_class']==test_data.at[i,'class']):
    accuracy=accuracy+1

print(accuracy)

total_accuracy=(accuracy/RowNumberTest)*100
print("Accuracy of the Model: ",total_accuracy,"%")

print(train_data['x1'])

min_x=train_data['x1'].min()
max_x=test_data['x1'].max()

db_x=np.arange(min_x, max_x, 0.5)
print(np.arange(min_x, max_x, 0.5))

##plt.plot(train_mean_x_class1,train_mean_y_class1, 'b1', markersize=10)
##plt.plot(train_mean_x_class2,train_mean_y_class2, 'rs', markersize=10)

db_y=[]
for value in db_x:
  db_y.append(((train_mean_x_class1 - train_mean_x_class2)*value +
               ((-0.5)*
                  (train_mean_x_class1**2 + train_mean_y_class1**2 -train_mean_x_class2**2
    - train_mean_y_class2**2))) / (-(train_mean_y_class1 - train_mean_y_class2)))

print(db_y)

plt.plot(db_x,db_y)
plt.plot(train_class1_x,train_class1_y, 'ro', markersize=5)
plt.plot(train_class2_x,train_class2_y, 'b*', markersize=5)
plt.plot(train_mean_x_class1,train_mean_y_class1, 'b1', markersize=5)
plt.plot(train_mean_x_class2,train_mean_y_class2, 'rs', markersize=5)
plt.plot(test_class1_x,test_class1_y, 'rP', markersize=5)
plt.plot(test_class2_x,test_class2_y, 'bX', markersize=5)
#plt.plot(db_x,db_y)

